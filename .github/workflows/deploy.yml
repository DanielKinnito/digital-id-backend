name: Deploy to Production

on:
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        
    - name: Deploy to ECS
      run: |
        # Update task definitions with new image tags
        aws ecs update-task-definition --cli-input-json file://task-definitions/auth-service.json
        aws ecs update-task-definition --cli-input-json file://task-definitions/user-service.json
        aws ecs update-task-definition --cli-input-json file://task-definitions/id-service.json
        
        # Update services with new task definitions
        aws ecs update-service --cluster digital-id --service auth-service --force-new-deployment
        aws ecs update-service --cluster digital-id --service user-service --force-new-deployment
        aws ecs update-service --cluster digital-id --service id-service --force-new-deployment
        
    - name: Deploy to Kubernetes
      run: |
        # Install kubectl
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/
        
        # Configure kubectl
        echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig
        export KUBECONFIG=./kubeconfig
        
        # Update image tags in manifests
        cd k8s/base
        kustomize edit set image auth-service=${{ secrets.DOCKERHUB_USERNAME }}/digital-id-auth:${{ github.sha }}
        kustomize edit set image user-service=${{ secrets.DOCKERHUB_USERNAME }}/digital-id-user:${{ github.sha }}
        kustomize edit set image id-service=${{ secrets.DOCKERHUB_USERNAME }}/digital-id-id:${{ github.sha }}
        
        # Apply manifests
        kubectl apply -k .
        
        # Wait for rollout
        kubectl -n digital-id rollout status deployment/auth-service
        kubectl -n digital-id rollout status deployment/user-service
        kubectl -n digital-id rollout status deployment/id-service
        
    - name: Run smoke tests
      run: |
        ./scripts/smoke-tests.sh
        
    - name: Notify on failure
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'Deployment failed',
            body: 'Deployment to production failed. Please check the logs.'
          }) 